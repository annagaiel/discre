#!/usr/bin/env ruby
require 'csv'

# The CSV headers are
# Account Email, YouTube Channel, Subscriber Count

csv1 = ARGV[0]
csv2 = ARGV[1]
concern = ARGV[2]
# concern can be subscriber_count or channel_ownership

# puts "csv1: #{csv1}" unless csv1.to_s.empty?
# puts "csv2: #{csv2}" unless csv2.to_s.empty?
# puts "concern #{concern}" unless concern.to_s.empty?

class User

  attr_reader :email, :channel, :subscriber

  def initialize (email, channel, subscriber)
    @email = email
    @channel = channel
    @subscriber = subscriber
  end

end

# Load CSV file into an Array of Hash objects
# :headers option indicates the file has a header row
data1 = CSV.read(csv1, :headers => true).map{|row| row.to_hash}
data2 = CSV.read(csv2, :headers => true).map{|row| row.to_hash}

results = []

# data1.each do |row|
#  email = row['Account Email']
#  channel = row[' YouTube Channel']
#  sub_count = row[' Subscriber Count']
# end

# data1.each do |row|
#   puts row.inspect
# end

# data1.each do |row|
#   sub_count = row[' Subscriber Count'].to_s.gsub(/\,/,"")
#   puts sub_count
# end

# data1.each do |row|
#   channel = row[' YouTube Channel']
#   #Remove the youtube url if it starts with http or youtube
#   if channel.start_with?('http', 'youtube')
#     channel.sub!(/^(https?\:\/\/(www.)?)?youtube.com\/channel\//, '')
#   end
#   #Remove UC if it starts with UC
#   if channel.start_with?('UC')
#     channel.sub!(/^UC/, '')
#   end
#   puts channel
# end





